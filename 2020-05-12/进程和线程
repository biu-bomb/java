# 线程和进程

| 领域    | 线程                                                         | 进程                                                         |
| ------- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 任务    | 单一线程单一任务                                             | 多种任务综合，包含一条或以上线程                             |
| 数据    | 包含自身信息，少量其他信息，存储于进程中                     | 包含服务全部指令和数据<br /><font color='red'>最小系统资源分配、调度单位</font> |
| ``CPU`` | 单一时刻单个``CPU``仅能运行一条线程<br />当前线程时间片耗尽，切换下一条线程<br />同进程线程上下文不切换<br /><font color='red'>最小CPU任务执行单位</font> | 线程交替，如果同属一个进程，进程运行<br />进程切换需要保存当前信息，加载、切换进程上下文 |

## 共同性质

| 性质   | 说明                               |
| ------ | ---------------------------------- |
| 动态性 | 运行过程保持活跃                   |
| 并发性 | 单一时刻运行不唯一                 |
| 独立性 | 数据、逻辑自身一体，不受外界干扰   |
| 异步性 | 资源受限或者被调度，运行过程不连续 |

## 线程实现

| 线程类型   | 说明                                       |
| ---------- | ------------------------------------------ |
| 用户线程   | 用户空间实现的线程，由用户态线程库进行管理 |
| 内核线程   | 内核实现的线程，由内核直接管理             |
| 轻量级进程 | 内核中支持用户操作的线程                   |

## 线程状态

![img](../.imgs/20200724154219432.png)

# 线程调度

## 衡量指标

- 吞吐量
- 平均响应时间
- 平均响应延迟
- 公平性
- 额外开销

## 调度算法

| 调度算法                      | 具体描述                                             | 优势                                                         | 缺点                                                         |
| :---------------------------- | ---------------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| FIFO(First-In-First-Out)      | 按照入队顺序执行                                     | 最少切换开销：无切换<br />最大吞吐量：较少额外操作<br />最公平：先来先做 | 长时任务阻塞短时任务                                         |
| SJF(Shortest-Job-First)       | (剩余)短时任务优先执行                               | 平均响应最低                                                 | 长时任务容易饿死<br />频繁调度，额外开销大                   |
| Round Robin                   | 时间片抢占                                           | 公平调度：短时任务在后也能执行                               | 频繁切换上下文降低缓存命中，重加载耗时<br />时间片不好设置   |
| Max-Min Fairness              | 剩余资源均分                                         |                                                              |                                                              |
| MFQ(MultiLevelFeedback Queue) | 任务分级<br />优先任务时间片少<br />任务调度逐级下沉 | 各方面良好                                                   | 多CPU共单一MFQ造成阻塞，切换时候缓存冲加载<br /><font color='red'>解决：单一CPU单一MFQ</font> |

## 其他策略

| strategy            | description              |
| ------------------- | ------------------------ |
| ``Gang Scheduling`` | 统一进程中的线程同时调度 |
| ``Space Sharing``   | 避免单一进程独占CPU      |

